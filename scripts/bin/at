#!/usr/bin/env python3
from utils.oj import OnlineJudge
import werkzeug
#werkzeug.cached_property = werkzeug.utils.cached_property
from robobrowser import RoboBrowser
from bs4 import BeautifulSoup
import json
import logging

LANGS = {
    '.cpp': ['4003', '3003'],
    '.py': ['4047', '3510'],
}

def get_url(contestId, problemId):
    url = 'https://atcoder.jp/contests/{0}/tasks/{0}_{1}'.format(contestId, problemId)
    return url.format(contestId)

class AtCoder(OnlineJudge):
    config = '.atconfig.json'

    def do_login(self, username, token):
        self.robo.open('https://atcoder.jp/login')
        form = self.robo.get_form(class_='form-horizontal')
        form['username'] = username
        form['password'] = token
        self.robo.submit_form(form)
        errors = self.robo.select('.alert-danger')
        if len(errors) > 0:
            error = errors[0]
            message = list(filter(lambda y: len(y) > 0, [x.strip() for x in error.findAll(text=True, recursive=False)]))[0]
            return message

    def do_submit(self, contestId, problemId, lang, sourceFile):
        url = get_url(contestId, problemId)
        self.robo.open(url)
        if '404' in self.robo.find('title').get_text():
            logger.error('Problem not found!')

        form = self.robo.get_form(class_='form-code-submit')
        langSet = False
        for code in LANGS[lang]:
            try:
                form['data.LanguageId'] = code
                langSet = True
                break
            except ValueError:
                logger.debug('Lang code {} not available.'.format(code))
        if not langSet:
            logger.error('No known lang code available!')

        form['sourceCode'] = sourceFile.read()
        res = self.robo.submit_form(form)

at = AtCoder()

