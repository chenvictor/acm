#!/usr/bin/env python3
from argparse import ArgumentParser, FileType
from lib.logger import make_logger
from lib.judge import get_judge
from lib.config import read_config

def apply_defaults(args, defaults):
    for key in defaults:
        if getattr(args, key) is None:
            setattr(args, key, defaults[key])

def make_guess(filename):
    try:
        problem, lang = filename.split('.')
    except:
        problem = None
        lang = None
    return {'problem': problem, 'language': lang}

if __name__ == '__main__':
    parser = ArgumentParser(prog='CLI submit', description='Submit a solution to an online judge')

    parser.add_argument('file', type=FileType())
    parser.add_argument('-j', '--judge')
    parser.add_argument('-c', '--contest')
    parser.add_argument('-p', '--problem')
    parser.add_argument('-l', '--language')

    flags = parser.add_argument_group(title='flags')
    flags.add_argument('-s', '--skip', action='store_true', help='skip submission step')
    flags.add_argument('-v', '--verbose', action='count', default=0, help='verbose output')

    args = parser.parse_args()
    logger = make_logger(args.verbose)

    # default arguments from stored config and filename
    config = read_config()
    guess = make_guess(args.file.name)
    apply_defaults(args, {**config, **guess}) # python 3.5+

    # check required arguments exist
    for req in ['judge', 'contest', 'problem', 'language']:
        if getattr(args, req) is None:
            logger.error(f'please specify {req}')
    judge = get_judge(args.judge, args.contest, logger)
    if args.skip:
        logger.error('skip flag set')
    judge.submit(args.file, args.problem, args.language)
    print('Submitted')

