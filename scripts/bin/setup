#!/usr/bin/env python3
from argparse import ArgumentParser
from lib.logger import make_logger
from lib.judge import get_judge
from lib.config import read_config, write_config

if __name__ == '__main__':
    parser = ArgumentParser(prog='CLI init', description='Initializes contest config')

    parser.add_argument('-j', '--judge')
    parser.add_argument('-c', '--contest')

    flags = parser.add_argument_group(title='flags')
    flags.add_argument('-v', '--verbose', action='count', default=0, help='verbose output')
    flags.add_argument('-p', '--print', action='store_true', help='print config')

    args = parser.parse_args()
    logger = make_logger(args.verbose)
    config = read_config()
    if args.print:
        if config:
            print(config)
        else:
            print('no config')
    else:
        judge = get_judge(args.judge, args.contest, logger)
        if config is not None:
            logger.warning(f'config already exists:\n{config}')
            try:
                input('Overwrite? [ENTER]')
            except KeyboardInterrupt:
                print()
                exit(1)
        config = {
            'judge': args.judge,
            'contest': args.contest
        }
        logger.debug(config)
        judge.setup(config)
        write_config(config)
        logger.info('success')

